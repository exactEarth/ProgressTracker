version: 2

workflows:
  version: 2
  workflow:
    jobs:
      - test-3.6
      - test-3.7
      - lint-rst
      - lint-code
  deploy:
    jobs:
      - deploy:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

defaults: &defaults
  working_directory: ~/code
  environment:
    STRICT_WARNINGS: '1'
  steps:
  - checkout
  - run:
      name: Test
      command: python setup.py test

jobs:
  test-3.6:
    <<: *defaults
    docker:
    - image: circleci/python:3.6
  test-3.7:
    <<: *defaults
    docker:
    - image: circleci/python:3.7
    
  lint-rst:
    working_directory: ~/code
    steps:
    - checkout
    - run:
        name: Install lint tools
        command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install Pygments restructuredtext-lint
    - run:
        name: Lint
        command:  |
            . venv/bin/activate
            rst-lint --encoding=utf-8 README.rst
    docker:
    - image: circleci/python:3.6

  lint-code:
    working_directory: ~/code
    steps:
    - checkout
    - run:
        name: Install lint tools
        command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install mypy flake8
    - run:
        name: Lint
        command: |
            . venv/bin/activate
            mypy --strict progress_tracker
            flake8 --ignore='E501' --exclude=__init__.py progress_tracker
    docker:
    - image: circleci/python:3.6

  deploy:
    steps:
    - checkout
    - run:
        name: verify git tag vs. version
        command: |
          python3 -m venv venv
          . venv/bin/activate
          python setup.py verify
    - run:
        name: init .pypirc
        command: |
          echo -e "[pypi]" >> ~/.pypirc
          echo -e "username = exactEarth" >> ~/.pypirc
          echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
    - run:
        name: Install build tools
        command: |
          . venv/bin/activate
          pip install wheel
    - run:
        name: create packages
        command: |
          . venv/bin/activate
          python setup.py sdist
          python setup.py bdist_wheel
    - run:
        name: upload to pypi
        command: |
          . venv/bin/activate
          twine upload dist/*
    docker:
    - image: circleci/python:3.6
